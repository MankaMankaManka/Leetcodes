class Solution {
public:
    int myAtoi(string s) {
        int i = 0, sign = 1;
        long res = 0;

        // Trim leading spaces
        while (i < s.size() && s[i] == ' ') 
        {
            i++;
        }
        if (i == s.size()){
            return 0;
        }

        if (s[i] == '-') 
        { 
            sign = -1;
            i++; 
        }
        else if (s[i] == '+')
        {
            i++;
        }
        // Process numerical characters
        while (i < s.size() && 0<=s[i]-'0' && 9>=s[i]-'0') 
        {
            res = res * 10 + (s[i] - '0');

            // Handle overflow
            if (sign * res > 2147483647) 
            {
                return 2147483647;
            }
            if (sign * res < -2147483648) 
            {
                return -2147483648;
            }
            i++;
        }

        return (int)(sign * res);
    }
};
